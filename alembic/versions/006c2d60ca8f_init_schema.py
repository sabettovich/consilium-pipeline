"""init schema

Revision ID: 006c2d60ca8f
Revises: 
Create Date: 2025-10-16 02:22:46.675660

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '006c2d60ca8f'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenant',
    sa.Column('tenant_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_table('case',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('case_id', sa.String(length=128), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'case_id', name='uq_case_tenant_caseid')
    )
    op.create_index(op.f('ix_case_case_id'), 'case', ['case_id'], unique=False)
    op.create_index(op.f('ix_case_tenant_id'), 'case', ['tenant_id'], unique=False)
    op.create_table('document',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('case_pk', sa.Integer(), nullable=True),
    sa.Column('doc_kind', sa.String(length=64), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=True),
    sa.Column('mime', sa.String(length=128), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('sha256', sa.String(length=128), nullable=True),
    sa.Column('storage_ref', sa.String(length=1024), nullable=True),
    sa.Column('vault_path_main', sa.String(length=1024), nullable=True),
    sa.Column('idempotency_key', sa.String(length=256), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['case_pk'], ['case.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'idempotency_key', name='uq_document_tenant_idem')
    )
    op.create_index(op.f('ix_document_case_pk'), 'document', ['case_pk'], unique=False)
    op.create_index(op.f('ix_document_sha256'), 'document', ['sha256'], unique=False)
    op.create_index(op.f('ix_document_status'), 'document', ['status'], unique=False)
    op.create_index('ix_document_tenant_case', 'document', ['tenant_id', 'case_pk'], unique=False)
    op.create_index(op.f('ix_document_tenant_id'), 'document', ['tenant_id'], unique=False)
    op.create_table('artifact',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('kind', sa.String(length=64), nullable=True),
    sa.Column('vault_path', sa.String(length=1024), nullable=True),
    sa.Column('sha256', sa.String(length=128), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artifact_document_id'), 'artifact', ['document_id'], unique=False)
    op.create_index('ix_artifact_tenant_doc', 'artifact', ['tenant_id', 'document_id'], unique=False)
    op.create_index(op.f('ix_artifact_tenant_id'), 'artifact', ['tenant_id'], unique=False)
    op.create_table('event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_tenant_id'), 'event', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_event_type'), 'event', ['type'], unique=False)
    op.create_table('job',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('queue', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_queue'), 'job', ['queue'], unique=False)
    op.create_index(op.f('ix_job_status'), 'job', ['status'], unique=False)
    op.create_index(op.f('ix_job_tenant_id'), 'job', ['tenant_id'], unique=False)
    op.create_table('problem_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('task_type', sa.String(length=64), nullable=True),
    sa.Column('queue', sa.String(length=128), nullable=True),
    sa.Column('error_code', sa.String(length=64), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('trace_id', sa.String(length=128), nullable=True),
    sa.Column('external_ref', sa.String(length=256), nullable=True),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.Column('user_decision', sa.String(length=64), nullable=True),
    sa.Column('decided_by', sa.String(length=128), nullable=True),
    sa.Column('decided_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_problem_log_tenant_id'), 'problem_log', ['tenant_id'], unique=False)
    op.create_table('storage_object',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('bucket', sa.String(length=255), nullable=True),
    sa.Column('key', sa.String(length=2048), nullable=True),
    sa.Column('etag', sa.String(length=128), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('case_pk', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['case_pk'], ['case.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bucket', 'key', name='uq_storage_object_bucket_key')
    )
    op.create_index('ix_storage_object_bucket_key', 'storage_object', ['bucket', 'key'], unique=False)
    op.create_index(op.f('ix_storage_object_tenant_id'), 'storage_object', ['tenant_id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(length=64), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('step', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_job_id'), 'task', ['job_id'], unique=False)
    op.create_index(op.f('ix_task_status'), 'task', ['status'], unique=False)
    op.create_index(op.f('ix_task_tenant_id'), 'task', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_tenant_id'), table_name='task')
    op.drop_index(op.f('ix_task_status'), table_name='task')
    op.drop_index(op.f('ix_task_job_id'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_storage_object_tenant_id'), table_name='storage_object')
    op.drop_index('ix_storage_object_bucket_key', table_name='storage_object')
    op.drop_table('storage_object')
    op.drop_index(op.f('ix_problem_log_tenant_id'), table_name='problem_log')
    op.drop_table('problem_log')
    op.drop_index(op.f('ix_job_tenant_id'), table_name='job')
    op.drop_index(op.f('ix_job_status'), table_name='job')
    op.drop_index(op.f('ix_job_queue'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_event_type'), table_name='event')
    op.drop_index(op.f('ix_event_tenant_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_artifact_tenant_id'), table_name='artifact')
    op.drop_index('ix_artifact_tenant_doc', table_name='artifact')
    op.drop_index(op.f('ix_artifact_document_id'), table_name='artifact')
    op.drop_table('artifact')
    op.drop_index(op.f('ix_document_tenant_id'), table_name='document')
    op.drop_index('ix_document_tenant_case', table_name='document')
    op.drop_index(op.f('ix_document_status'), table_name='document')
    op.drop_index(op.f('ix_document_sha256'), table_name='document')
    op.drop_index(op.f('ix_document_case_pk'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_case_tenant_id'), table_name='case')
    op.drop_index(op.f('ix_case_case_id'), table_name='case')
    op.drop_table('case')
    op.drop_table('tenant')
    # ### end Alembic commands ###
